@startuml Model chessgame
skinparam classAttributeIconSize 0
class Board {
    +board:Apiece[][]
    -amountOfMoves:int
    +Board(alreadySetup:bool)
    -setupPieces():void
    +moveWithChecked(piece:Apiece,cord:Coordinate)
    +move(piece:Apiece,cord:Coordinate,posMoves:Coordinates[]):bool
    +possibleMoves(cord:Coordinate):Coordinate[]
    +colorToMove():bool
    +clone():Board
    +isEnd(color:bool):string
}
abstract class Apiece {
    +value:int
    +pos:Coordinate
    +color:bool
    +image:string 
    +Apiece(pos:Coordinate,value:int,color:bool,img:string)
    +possibleMoves(board:Board) {abstract}
    +move(cord:Coordinate) {abstract}
    +clone():Apiece {abstract}

}



class King{
    +King(pos:Coordinate,kleur:bool)
    -hasMoved:bool
    

}
class Queen{
    +Queen(pos:Coordinate,kleur:bool)
}
class Knight{
    +Knight(pos:Coordinate,kleur:bool)
}
class Bishop{
    +Bishop(pos:Coordinate,kleur:bool)
}
class Rook{
    -hasMoved:bool
    +Rook(pos:Coordinate,kleur:bool)
}
class Pawn{
    -end:int
-hasMoved:bool
    +Pawn(pos:Coordinate,kleur:bool)
}


class Bot{
    -color:bool
    -depth:int
    -evaluation:IEvaluation
    +Bot(color:bool,alpha:int,beta:int,depth:int,evaluation:IEvaluation)
    -negamax(board:Board, depth:int,color:bool):[int,Coordinate[]]
    +NextMove():Coordinate[]
}


class Coordinate{
    +x:double
    +y:double
    +Coordinate(x:double,y:double)
    +zetOm():string
}

class LegalChecker{
    +attackMapWhite:int[][]
    +attackMapBlack:int[][]
    +whiteKing:King
    +blackKing:King
    -possibleMoves:Coordinate[]
    +LegalChecker(board:Board)
    - updateAttackMap(color:bool):void
    + isChecked(color:bool): bool
    + possibleMoves(piece,isCached):Coordinate[]
    + isEnd(color):int
    
    + clone(Boardvirtual):LegalChecker
}
note right : Seperation of concerns: \nchecking legal moves in \nLegalChecker instead of in Board


Apiece <|-left-King
Apiece <|--Queen
Apiece <|--Bishop
Apiece <|--Knight
Apiece <|-- Rook
Apiece <|-right-Pawn
Board o-- Apiece

Apiece -->Coordinate:has 
Board ..> Coordinate:uses
' Bot .right.>Board
' Bot ..> Coordinate:uses
Board<-right->LegalChecker:has
LegalChecker..>Apiece:uses
' Bot..>Apiece:uses

@enduml

