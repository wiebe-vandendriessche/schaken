@startuml Model chessgame
skinparam classAttributeIconSize 0
class Board {
    +board:Apiece[][]
    -amountOfMoves:int
    +Board(alreadySetup:bool)
    -setupPieces(FEN:string):void
    +possibleMoves(cord:Coordinate):Coordinate[]
    +getPieces():Apiece[][]
    +moveWithCheck(piece:Apiece,cord:Coordinate)
    +move(piece:Apiece,cord:Coordinate):bool
    +colorToMove():bool
    +clone(imageOnLoad:bool):Board
    +isEnd(color:bool):string
}
abstract class Apiece {
    +value:int
    +pos:Coordinate
    -type:string
    +color:bool
    +image:Image
    +Apiece(pos:Coordinate,value:int,color:bool,img:string,imgOnLoad:bool)
    +getType():string
    +move(cord:Coordinate):void
    #pushMoves(Coordinate[],Coordinate[],Apiece[][]):void
    +possibleMoves(board:Board) {abstract}
    +clone():Apiece {abstract}
    

}



class King{
    +King(pos:Coordinate,kleur:bool)
    +moved:bool
    +move(cord:Coordinate):void
    +attackMoves(bord):Coordinate[]
}
class Queen{
    +Queen(pos:Coordinate,kleur:bool)
}
class Knight{
    +Knight(pos:Coordinate,kleur:bool)
}
class Bishop{
    +Bishop(pos:Coordinate,kleur:bool)
}
class Rook{
    +moved:bool
    +Rook(pos:Coordinate,kleur:bool)
    +move(cord:Coordinate):void
}
class Pawn{
    -end:int
-hasMoved:bool
    +Pawn(pos:Coordinate,kleur:bool)
}

class FenConvertor{
    +setupPieces(board:Board,FEN):void{static}
    +boardToFen(board:Board):string{static}
    +createPiece(letter:string,x:number,y:number):Apiece{static}

}



class Coordinate{
    + x,y:double
    +Coordinate(x:double,y:double)
    +convertToChessCords():string
    +changeToCord(cord:string):Coordinate {static}
}

class LegalChecker{
    +attackMapWhite:int[][]
    +attackMapBlack:int[][]
    +whiteKing:King
    +blackKing:King
    -possibleMoves:Coordinate[]
    +LegalChecker(board:Board)
    - updateAttackMap(color:bool):void
    +castlingPossible(color:bool):bool
    + isChecked(color:bool): bool
    + possibleMoves(piece,isCached):Coordinate[]
    + isEnd(color):int
    + clone(Board):LegalChecker
}
note right : Seperation of concerns: \nchecking legal moves in \nLegalChecker instead of in Board


Apiece <|-left-King
Apiece <|--Queen
Apiece <|--Bishop
Apiece <|--Knight
Apiece <|-- Rook
Apiece <|-right-Pawn
Board o-- Apiece

Apiece -->Coordinate:has 
Board ..> Coordinate:uses

Board<-right->LegalChecker:has
LegalChecker..>Apiece:uses
Board <.left.> FenConvertor:uses
FenConvertor..>Apiece
@enduml